{"version":3,"sources":["webpack:///src/app/components/masters/tag/tag.component.html","webpack:///src/app/components/masters/tag/tag.component.ts","webpack:///src/app/components/masters/tag/tag.module.ts"],"names":["TagComponent","rfNgService","service","style","oldColor","columns","push","i18n","isNotNull","element","color","rfngService","convertHexColorToRgba","rowData","selector","templateUrl","styleUrls","TagModule","declarations","imports","providers","bootstrap","exports","schemas"],"mappings":"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","file":"masters-tag-tag-module-es5.js","sourcesContent":["<ng-container [ngSwitch]=\"this.enumStateAccess\">\r\n\r\n  <!--List-->\r\n  <ng-container *ngSwitchCase=\"'list'\">\r\n\r\n    <rf-page [idPage]=\"this.id\">\r\n\r\n      <ng-template rfTemplate=\"pageContent\">\r\n\r\n        <rf-toolbarpage>\r\n\r\n          <ng-template rfTemplate=\"toolBarPageContent\">\r\n\r\n            <rf-toolbarbrowser [baseController]=\"this\">\r\n            </rf-toolbarbrowser>\r\n\r\n          </ng-template>\r\n\r\n        </rf-toolbarpage>\r\n\r\n\r\n        <rf-bodypage>\r\n\r\n          <ng-template rfTemplate=\"bodyPageContent\">\r\n\r\n            <div class=\"floatLeftFullDiv\">\r\n\r\n              <rf-card [title]=\"'rfpm.menu.tags' | i18n\">\r\n                <ng-template rfTemplate=\"cardContent\">\r\n\r\n                  <rf-table [columns]=\"this.columns\" [baseControllerLazyLoad]=\"this\">\r\n\r\n                  </rf-table>\r\n\r\n                </ng-template>\r\n              </rf-card>\r\n\r\n            </div>\r\n\r\n          </ng-template>\r\n\r\n        </rf-bodypage>\r\n\r\n      </ng-template>\r\n\r\n    </rf-page>\r\n\r\n  </ng-container>\r\n\r\n  <!--Read/Edit/Add-->\r\n  <ng-container *ngSwitchDefault>\r\n\r\n    <form *ngIf=\"this.isElementNotNull()\" #frm=\"ngForm\" novalidate class=\"floatLeftFullDiv\">\r\n\r\n      <rf-page [idPage]=\"this.id\">\r\n        <ng-template rfTemplate=\"pageContent\">\r\n\r\n          <rf-toolbarpage>\r\n\r\n            <ng-template rfTemplate=\"toolBarPageContent\">\r\n\r\n              <rf-toolbarred [baseController]=\"this\" [form]=\"frm\"></rf-toolbarred>\r\n\r\n            </ng-template>\r\n\r\n          </rf-toolbarpage>\r\n\r\n          <rf-bodypage>\r\n\r\n            <ng-template rfTemplate=\"bodyPageContent\">\r\n\r\n              <div class=\"floatLeftFullDiv\">\r\n\r\n                <rf-card [title]=\"'rfng.general' | i18n\" [styleBody]=\"this.styleCard()\">\r\n\r\n                  <ng-template rfTemplate=\"cardContent\">\r\n\r\n                    <div class=\"floatLeftFullDivCard\">\r\n\r\n                      <rf-inputtext name=\"{{'code'+this.id}}\" [disabled]=\"this.isStateRead()\" [required]=\"true\"\r\n                        [model]=\"this.element\" [property]=\"'code'\" [max]=\"4\" [label]=\"'rfng.code' | i18n\">\r\n                      </rf-inputtext>\r\n\r\n                      <rf-inputtext name=\"{{'description'+this.id}}\" [disabled]=\"this.isStateRead()\" [required]=\"true\"\r\n                        [model]=\"this.element\" [property]=\"'description'\" [max]=\"100\"\r\n                        [label]=\"'rfng.description' | i18n\">\r\n                      </rf-inputtext>\r\n\r\n                      <rf-inputcolor name=\"{{'color'+this.id}}\" [disabled]=\"this.isStateRead()\" [model]=\"this.element\"\r\n                        [property]=\"'color'\" [label]=\"'rfng.color' | i18n\">\r\n\r\n                      </rf-inputcolor>\r\n\r\n                    </div>\r\n\r\n                  </ng-template>\r\n\r\n                </rf-card>\r\n\r\n              </div>\r\n\r\n            </ng-template>\r\n\r\n          </rf-bodypage>\r\n\r\n        </ng-template>\r\n\r\n      </rf-page>\r\n\r\n    </form>\r\n\r\n  </ng-container>\r\n\r\n</ng-container>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { RfngService, BaseRedControllerComponent, CommonsUtils, Column } from 'rfnglib';\r\nimport { TagService } from 'src/app/services/masters/tag.service';\r\n\r\n\r\n@Component({\r\n  selector: 'rfpm-tag',\r\n  templateUrl: './tag.component.html',\r\n  styleUrls: ['./tag.component.css']\r\n})\r\nexport class TagComponent extends BaseRedControllerComponent {\r\n\r\n  oldColor: string;\r\n  style: any;\r\n\r\n\r\n  constructor(rfNgService: RfngService, @Inject(TagService) service) {\r\n    super(rfNgService, service);\r\n    this.style = {};\r\n    this.oldColor = '';\r\n  }\r\n\r\n  /**\r\n   * Load columns show in browser\r\n   */\r\n  async loadColumns() {\r\n    this.columns.push(new Column('code', this.i18n('rfpm.columns.proyects.code'), 150, true));\r\n    this.columns.push(new Column('description', this.i18n('rfpm.columns.proyects.description'), 600, true));\r\n  }\r\n\r\n  /**\r\n   * Method for generate style for card\r\n   */\r\n  styleCard() {\r\n    if (CommonsUtils.isNotNull(this.element) && CommonsUtils.isNotNull(this.element)\r\n      && CommonsUtils.isNotNull(this.element.color) && this.oldColor !== this.element.color) {\r\n      this.oldColor = this.element.color;\r\n      this.style = { 'background-color': this.rfngService.convertHexColorToRgba(this.element.color, 0.5) };\r\n    }\r\n    return this.style;\r\n  }\r\n\r\n  styleRow(style, rowData) {\r\n    if (CommonsUtils.isNotNull(rowData)\r\n      && CommonsUtils.isNotNull(rowData.color)) {\r\n      style['background-color'] = this.rfngService.convertHexColorToRgba(rowData.color, 0.5);\r\n    }\r\n    return style;\r\n  }\r\n}\r\n","import {\r\n  BaseModule,\r\n  InputButtonModule, I18nModule, InputTextModule, InputColorModule, ButtonModule, CardModule, PageModule,\r\n  TableModule, ToolBarRedModule, ToolBarBrowserModule\r\n} from 'rfnglib';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TagComponent } from './tag.component';\r\nimport { TagService } from 'src/app/services/masters/tag.service';\r\n\r\n@NgModule({\r\n  declarations: [TagComponent],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    PageModule,\r\n    TableModule,\r\n    ToolBarRedModule,\r\n    ToolBarBrowserModule,\r\n    InputButtonModule,\r\n    I18nModule,\r\n    InputTextModule,\r\n    InputColorModule\r\n  ],\r\n  providers: [TagService],\r\n  bootstrap: [TagComponent],\r\n  exports: [\r\n    TagComponent,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class TagModule extends BaseModule {\r\n}\r\n"]}